{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ntoko\\\\Documents\\\\abc\\\\lotto\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getWeb3, getLotteryContract } from \"./utils/u\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [balance, setBalance] = useState(\"0\");\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = getWeb3();\n        if (!web3Instance) return;\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n        setWeb3(web3Instance);\n        setContract(getLotteryContract(web3Instance));\n      } catch (err) {\n        if (err.code === -32002) {\n          setMessage(\"MetaMask permission request already pending. Please check MetaMask and approve or reject the request, then refresh the page.\");\n        } else {\n          setMessage(\"Error connecting to MetaMask: \" + (err.message || err));\n        }\n      }\n    };\n    init();\n  }, []);\n  const enterLottery = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    setMessage(\"Entering lottery...\");\n    try {\n      await contract.methods.enter().send({\n        from: account,\n        value: web3.utils.toWei(\"0.01\", \"ether\")\n      });\n      setMessage(\"You have entered the lottery!\");\n    } catch (err) {\n      setMessage(\"Error entering lottery: \" + (err.message || err));\n    }\n  };\n  const getPlayers = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    try {\n      const playersList = await contract.methods.getPlayers().call();\n      setPlayers(playersList);\n    } catch (err) {\n      setMessage(\"Error fetching players: \" + (err.message || err));\n    }\n  };\n  const getBalance = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    try {\n      const bal = await contract.methods.getBalance().call();\n      setBalance(web3.utils.fromWei(bal, \"ether\"));\n    } catch (err) {\n      setMessage(\"Error fetching balance: \" + (err.message || err));\n    }\n  };\n  const pickWinner = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    setMessage(\"Picking winner...\");\n    try {\n      await contract.methods.pickWinner().send({\n        from: account\n      });\n      setMessage(\"Winner has been picked!\");\n    } catch (err) {\n      setMessage(\"Error picking winner: \" + (err.message || err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lottery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: enterLottery,\n      children: \"Enter Lottery (0.01 ETH)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getPlayers,\n      children: \"Show Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getBalance,\n      children: \"Show Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pickWinner,\n      children: \"Pick Winner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: players.map((p, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: p\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Balance: \", balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i2XIr9z7pW7ImcQJkvPbpPAS0fE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","getWeb3","getLotteryContract","jsxDEV","_jsxDEV","App","_s","web3","setWeb3","contract","setContract","account","setAccount","players","setPlayers","balance","setBalance","message","setMessage","init","web3Instance","accounts","window","ethereum","request","method","err","code","enterLottery","methods","enter","send","from","value","utils","toWei","getPlayers","playersList","call","getBalance","bal","fromWei","pickWinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","p","i","_c","$RefreshReg$"],"sources":["C:/Users/Ntoko/Documents/abc/lotto/client/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getWeb3, getLotteryContract } from \"./utils/u\";\nimport \"./App.css\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [balance, setBalance] = useState(\"0\");\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const web3Instance = getWeb3();\n        if (!web3Instance) return;\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setAccount(accounts[0]);\n        setWeb3(web3Instance);\n        setContract(getLotteryContract(web3Instance));\n      } catch (err) {\n        if (err.code === -32002) {\n          setMessage(\"MetaMask permission request already pending. Please check MetaMask and approve or reject the request, then refresh the page.\");\n        } else {\n          setMessage(\"Error connecting to MetaMask: \" + (err.message || err));\n        }\n      }\n    };\n    init();\n  }, []);\n\n  const enterLottery = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    setMessage(\"Entering lottery...\");\n    try {\n      await contract.methods.enter().send({ from: account, value: web3.utils.toWei(\"0.01\", \"ether\") });\n      setMessage(\"You have entered the lottery!\");\n    } catch (err) {\n      setMessage(\"Error entering lottery: \" + (err.message || err));\n    }\n  };\n\n  const getPlayers = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    try {\n      const playersList = await contract.methods.getPlayers().call();\n      setPlayers(playersList);\n    } catch (err) {\n      setMessage(\"Error fetching players: \" + (err.message || err));\n    }\n  };\n\n  const getBalance = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    try {\n      const bal = await contract.methods.getBalance().call();\n      setBalance(web3.utils.fromWei(bal, \"ether\"));\n    } catch (err) {\n      setMessage(\"Error fetching balance: \" + (err.message || err));\n    }\n  };\n\n  const pickWinner = async () => {\n    if (!contract) {\n      setMessage(\"Contract not initialized. Please connect MetaMask and refresh the page.\");\n      return;\n    }\n    setMessage(\"Picking winner...\");\n    try {\n      await contract.methods.pickWinner().send({ from: account });\n      setMessage(\"Winner has been picked!\");\n    } catch (err) {\n      setMessage(\"Error picking winner: \" + (err.message || err));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Lottery</h1>\n      <button onClick={enterLottery}>Enter Lottery (0.01 ETH)</button>\n      <button onClick={getPlayers}>Show Players</button>\n      <button onClick={getBalance}>Show Balance</button>\n      <button onClick={pickWinner}>Pick Winner</button>\n      <div>\n        <h2>Players:</h2>\n        <ul>\n          {players.map((p, i) => <li key={i}>{p}</li>)}\n        </ul>\n      </div>\n      <div>\n        <h2>Balance: {balance} ETH</h2>\n      </div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}